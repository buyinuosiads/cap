<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SunnyUI.FrameDecoder</name>
    </assembly>
    <members>
        <member name="T:Sunny.FrameDecoder.ByteBits">
            <summary>
            表示byte的位集合
            位索引(0 ~ 7)，为由低到高的位索引，最低位为0位
            </summary>
        </member>
        <member name="F:Sunny.FrameDecoder.ByteBits.Value">
            <summary>
            字节值
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.ByteBits.MaxLength">
            <summary>
            位集合最大长度
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteBits.#ctor(System.Byte)">
            <summary>
            byte的位集合
            </summary>
            <param name="value">字节</param>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteBits.Take(System.Int32,System.Int32)">
            <summary>
            从指定索引位置取高位
            </summary>
            <param name="index">索引 (0 ~ 7)，由低到高的位索引，最低位为0位</param>
            <param name="count">位的数量</param>
            <returns></returns>
        </member>
        <member name="P:Sunny.FrameDecoder.ByteBits.Item(System.Int32)">
            <summary>
            获取或设置指定位的值
            </summary>
            <param name="index">索引 (0 ~ 7)，由低到高的位索引，最低位为0位</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteBits.ToString">
            <summary>
            字符串显示各个位的值
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sunny.FrameDecoder.ByteBits.DisplayText">
            <summary>
            字符串显示各个位的值，四位用空格分隔显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteBits.op_Implicit(System.Byte)~Sunny.FrameDecoder.ByteBits">
            <summary>
            从byte类型隐式转换
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteBits.op_Implicit(Sunny.FrameDecoder.ByteBits)~System.Byte">
            <summary>
            隐式转换为byte类型
            </summary>
            <param name="bits"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteBits.GetHashCode">
            <summary>
            获取哈希码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteBits.Equals(System.Object)">
            <summary>
            比较是否和目标相等
            </summary>
            <param name="obj">目标</param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteBits.System#IComparable{Sunny#FrameDecoder#ByteBits}#CompareTo(Sunny.FrameDecoder.ByteBits)">
            <summary>
            比较
            </summary>
            <param name="other">目标</param>
            <returns></returns>
        </member>
        <member name="T:Sunny.FrameDecoder.UIntBits">
            <summary>
            表示uint的位集合
            位索引(0 ~ 31)，为由低到高的位索引，最低位为0位
            </summary>
        </member>
        <member name="F:Sunny.FrameDecoder.UIntBits.Value">
            <summary>
            字节值
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.UIntBits.MaxLength">
            <summary>
            位集合最大长度
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.UIntBits.#ctor(System.UInt32)">
            <summary>
            uint的位集合
            </summary>
            <param name="value">字节</param>
        </member>
        <member name="M:Sunny.FrameDecoder.UIntBits.Take(System.Int32,System.Int32)">
            <summary>
            从指定索引位置取高位
            </summary>
            <param name="index">索引 (0 ~ 31)，由低到高的位索引，最低位为0位</param>
            <param name="count">位的数量</param>
            <returns></returns>
        </member>
        <member name="P:Sunny.FrameDecoder.UIntBits.Item(System.Int32)">
            <summary>
            获取或设置指定位的值
            </summary>
            <param name="index">索引 (0 ~ 31)，由低到高的位索引，最低位为0位</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UIntBits.ToString">
            <summary>
            字符串显示各个位的值
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sunny.FrameDecoder.UIntBits.DisplayText">
            <summary>
            字符串显示各个位的值，四位用空格分隔显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UIntBits.op_Implicit(System.UInt32)~Sunny.FrameDecoder.UIntBits">
            <summary>
            从uint类型隐式转换
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UIntBits.op_Implicit(Sunny.FrameDecoder.UIntBits)~System.UInt32">
            <summary>
            隐式转换为uint类型
            </summary>
            <param name="bits"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UIntBits.GetHashCode">
            <summary>
            获取哈希码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UIntBits.Equals(System.Object)">
            <summary>
            比较是否和目标相等
            </summary>
            <param name="obj">目标</param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UIntBits.System#IComparable{Sunny#FrameDecoder#UIntBits}#CompareTo(Sunny.FrameDecoder.UIntBits)">
            <summary>
            比较
            </summary>
            <param name="other">目标</param>
            <returns></returns>
        </member>
        <member name="T:Sunny.FrameDecoder.UShortBits">
            <summary>
            表示ushort的位集合
            位索引(0 ~ 15)，为由低到高的位索引，最低位为0位
            </summary>
        </member>
        <member name="F:Sunny.FrameDecoder.UShortBits.Value">
            <summary>
            字节值
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.UShortBits.MaxLength">
            <summary>
            位集合最大长度
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.UShortBits.#ctor(System.UInt16)">
            <summary>
            ushort的位集合
            </summary>
            <param name="value">字节</param>
        </member>
        <member name="M:Sunny.FrameDecoder.UShortBits.Take(System.Int32,System.Int32)">
            <summary>
            从指定索引位置取高位
            </summary>
            <param name="index">索引 (0 ~ 15)，由低到高的位索引，最低位为0位</param>
            <param name="count">位的数量</param>
            <returns></returns>
        </member>
        <member name="P:Sunny.FrameDecoder.UShortBits.Item(System.Int32)">
            <summary>
            获取或设置指定位的值
            </summary>
            <param name="index">索引 (0 ~ 15)，由低到高的位索引，最低位为0位</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UShortBits.ToString">
            <summary>
            字符串显示各个位的值
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sunny.FrameDecoder.UShortBits.DisplayText">
            <summary>
            字符串显示各个位的值，四位用空格分隔显示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UShortBits.op_Implicit(System.UInt16)~Sunny.FrameDecoder.UShortBits">
            <summary>
            从ushort类型隐式转换
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UShortBits.op_Implicit(Sunny.FrameDecoder.UShortBits)~System.UInt16">
            <summary>
            隐式转换为ushort类型
            </summary>
            <param name="bits"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UShortBits.GetHashCode">
            <summary>
            获取哈希码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UShortBits.Equals(System.Object)">
            <summary>
            比较是否和目标相等
            </summary>
            <param name="obj">目标</param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.UShortBits.System#IComparable{Sunny#FrameDecoder#UShortBits}#CompareTo(Sunny.FrameDecoder.UShortBits)">
            <summary>
            比较
            </summary>
            <param name="other">目标</param>
            <returns></returns>
        </member>
        <member name="T:Sunny.FrameDecoder.DataCache`1">
            <summary>
            数据缓存
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:Sunny.FrameDecoder.DataCache`1.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="capacity">初始容量</param>
        </member>
        <member name="M:Sunny.FrameDecoder.DataCache`1.Dispose">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DataCache`1.Tag">
            <summary>
            标签
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DataCache`1.Advance(System.Int32)">
            <inheritdoc/>        
        </member>
        <member name="M:Sunny.FrameDecoder.DataCache`1.Clear">
            <inheritdoc/>      
        </member>
        <member name="M:Sunny.FrameDecoder.DataCache`1.GetMemory(System.Int32)">
            <inheritdoc/>      
        </member>
        <member name="M:Sunny.FrameDecoder.DataCache`1.GetSpan(System.Int32)">
            <inheritdoc/>      
        </member>
        <member name="M:Sunny.FrameDecoder.DataCache`1.Remove(System.Int32)">
            <inheritdoc/>      
        </member>
        <member name="P:Sunny.FrameDecoder.DataCache`1.WrittenMemory">
            <summary>
            返回到目前为止写入基础缓冲区的数据.
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DataCache`1.WrittenSpan">
            <summary>
            返回到目前为止写入基础缓冲区的数据
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DataCache`1.WrittenCount">
            <summary>
            返回到目前为止写入基础缓冲区的数据量
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DataCache`1.Capacity">
            <summary>
            返回基础缓冲区内的总空间量
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DataCache`1.FreeCapacity">
            <summary>
            返回在不强制基础缓冲区增长的情况下仍可写入的可用空间量
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DataCache`1.Add(System.ReadOnlySpan{`0})">
            <summary>
            增加数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.DataPool`1">
            <summary>
            数组数据池
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DataPool`1.Shared">
            <summary>
            数据池单例
            </summary>
            <returns>数据池</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.DataPool`1.Rent(System.Int32)">
            <summary>
            租借字节数组
            </summary>
            <param name="minimumLength"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.DataPool`1.Return(`0[],System.Boolean)">
            <summary>
            归还字节数组
            </summary>
            <param name="array"></param>
            <param name="clearArray"></param>
        </member>
        <member name="T:Sunny.FrameDecoder.DecoderCache`2">
            <summary>
            解码器缓存类
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderCache`2.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="aliveMinutes">存活时间</param>
        </member>
        <member name="P:Sunny.FrameDecoder.DecoderCache`2.Item(`0)">
            <summary>
            获取解码器
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Sunny.FrameDecoder.DecoderCache`2.AliveMinutes">
            <summary>
            对象存活时间（分钟）。如果一个对象在 AliveMinutes 时间间隔内都不被访问，则将被从缓存中清除。
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderCache`2.ContainsKey(`0)">
            <summary>
            解码器是否存在
            </summary>
            <param name="key">Key</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderCache`2.Add(`0,`1)">
            <summary>
            增加解码器
            </summary>
            <param name="key">Key</param>
            <param name="value">解码器</param>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderCache`2.Remove(`0)">
            <summary>
            移除解码器
            </summary>
            <param name="key"></param>
        </member>
        <member name="E:Sunny.FrameDecoder.DecoderCache`2.OnRemoveDecoder">
            <summary>
            移除解码器事件
            </summary>
        </member>
        <member name="E:Sunny.FrameDecoder.DecoderCache`2.OnAddDecoder">
            <summary>
            移除解码器事件
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderCache`2.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderCache`2.Get(`0)">
            <summary>
            获取解码器
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderCache`2.Dispose">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DecoderCache`2.Keys">
            <summary>
            客户端列表
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DecoderCache`2.Values">
            <summary>
            缓存节点列表
            </summary>
        </member>
        <member name="T:Sunny.FrameDecoder.OnDecoderChanged`2">
            <summary>
            移除解码器事件
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="sender"></param>
            <param name="item"></param>
        </member>
        <member name="T:Sunny.FrameDecoder.DecoderCacheItem`2">
            <summary>
            解码器缓存节点
            </summary>
            <typeparam name="TKey">Key</typeparam>
            <typeparam name="TValue">解码器</typeparam>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderCacheItem`2.#ctor(`0,`1)">
            <summary>
            构造函数
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="P:Sunny.FrameDecoder.DecoderCacheItem`2.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DecoderCacheItem`2.Value">
            <summary>
            解码器
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DecoderCacheItem`2.LastAccessTime">
            <summary>
            最后更新时间
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderCacheItem`2.Dispose">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="T:Sunny.FrameDecoder.IDataCache`1">
            <summary>
            缓存接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sunny.FrameDecoder.IDataCache`1.Add(System.ReadOnlySpan{`0})">
            <summary>
            增加数据
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="M:Sunny.FrameDecoder.IDataCache`1.Remove(System.Int32)">
            <summary>
            从开头移除指定长度
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:Sunny.FrameDecoder.IDataCache`1.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.IDataCache`1.WrittenSpan">
            <summary>
            返回到目前为止写入基础缓冲区的数据
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.IDataCache`1.WrittenMemory">
            <summary>
            返回到目前为止写入基础缓冲区的数据.
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.IDataCache`1.WrittenCount">
            <summary>
            返回到目前为止写入基础缓冲区的数据量
            </summary>
        </member>
        <member name="T:Sunny.FrameDecoder.BaseByteFrameDecoder">
            <summary>
            字节帧解码器基类
            </summary>
        </member>
        <member name="F:Sunny.FrameDecoder.BaseByteFrameDecoder.Cache">
            <summary>
            数据缓存
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseByteFrameDecoder.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseByteFrameDecoder.Decode(System.Byte[])">
            <summary>
            解码
            </summary>
            <param name="data">输入数据</param>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseByteFrameDecoder.Decode(System.ReadOnlySpan{System.Byte})">
            <summary>
            解码
            </summary>
            <param name="data">输入数据</param>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseByteFrameDecoder.PrepareDecode(System.Byte[]@)">
            <summary>
            准备数据解码
            </summary>
            <param name="data">输入数据</param>
            <returns>判断此数据是否可以解码</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseByteFrameDecoder.PrepareDecode(System.ReadOnlySpan{System.Byte})">
            <summary>
            准备数据解码
            </summary>
            <param name="data">输入数据</param>
            <returns>判断此数据是否可以解码</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseByteFrameDecoder.Reset">
            <summary>
            缓存复位
            </summary>
        </member>
        <member name="E:Sunny.FrameDecoder.BaseByteFrameDecoder.OnDecoder">
            <summary>
            解码输出事件
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseByteFrameDecoder.DoDecoder(System.Object,Sunny.FrameDecoder.IByteEventArgs)">
            <summary>
            调用解码输出事件
            </summary>
            <param name="sender">解码器</param>
            <param name="e">数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.BaseFrameDecoder">
            <summary>
            帧解码器基类
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseFrameDecoder.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseFrameDecoder.FinishDecode">
            <summary>
            结束一次解码
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.BaseFrameDecoder.Tag">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.BaseFrameDecoder.Guid">
            <summary>
            GUID
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.BaseFrameDecoder.IPEndPoint">
            <summary>
            解码器数据来源绑定的IP地址和端口
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.BaseFrameDecoder.FrameExceptDataLength">
            <summary>
            帧数据除了数据外的长度
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseFrameDecoder.Decoding">
            <summary>
            解码函数
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.BaseFrameDecoder.MinFrameLength">
            <summary>
            获取或设置包数据的最小值（默认为0，不判断）
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.BaseFrameDecoder.MaxFrameLength">
            <summary>
            获取或设置包数据的最大值（默认为0，不判断）
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseFrameDecoder.Reset">
            <summary>
            复位
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.BaseFrameDecoder.CacheMaxSize">
            <summary>
            缓存最大长度
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.BaseFrameDecoder.LastDecodedTime">
            <summary>
            上次完成解码时间
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.BaseFrameDecoder.LastAddedTime">
            <summary>
            上次解码数据时间
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.BaseFrameDecoder.CacheTimeout">
            <summary>
            缓存超时，缓存时间为当前解码数据与上次解码成功时间差，默认800，单位ms，大于0判断
            </summary>
        </member>
        <member name="E:Sunny.FrameDecoder.BaseFrameDecoder.OnDecoderError">
            <summary>
            解码错误事件
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseFrameDecoder.DecoderError(System.String,System.Byte[])">
            <summary>
            解码错误事件
            </summary>
            <param name="error">错误描述</param>
            <param name="data">数据</param>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseFrameDecoder.DecoderError(System.String,System.ReadOnlySpan{System.Byte})">
            <summary>
            解码错误事件
            </summary>
            <param name="error">错误描述</param>
            <param name="data">数据</param>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseFrameDecoder.DecoderError(System.String,System.String)">
            <summary>
            解码错误事件
            </summary>
            <param name="error">错误描述</param>
            <param name="data">数据</param>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseFrameDecoder.DoAfterDecoder(System.Object)">
            <summary>
            每次解码后执行事件
            </summary>
            <param name="sender">对象</param>
        </member>
        <member name="E:Sunny.FrameDecoder.BaseFrameDecoder.AfterDecoder">
            <summary>
            每次解码后执行事件
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseFrameDecoder.CheckTimeout">
            <summary>
            缓存超时大于0时，检查超时，判断当前解码数据与上次完成解码数据时间差，超时则复位
            </summary>
        </member>
        <member name="T:Sunny.FrameDecoder.BaseStringFrameDecoder">
            <summary>
            字符串帧解码器基类
            </summary>
        </member>
        <member name="F:Sunny.FrameDecoder.BaseStringFrameDecoder.Cache">
            <summary>
            数据缓存
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseStringFrameDecoder.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseStringFrameDecoder.Decode(System.String)">
            <summary>
            解码
            </summary>
            <param name="data">输入数据</param>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseStringFrameDecoder.PrepareDecode(System.String@)">
            <summary>
            准备数据解码
            </summary>
            <param name="data">输入数据</param>
            <returns>判断此数据是否可以解码</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseStringFrameDecoder.Reset">
            <summary>
            缓存复位
            </summary>
        </member>
        <member name="E:Sunny.FrameDecoder.BaseStringFrameDecoder.OnDecoder">
            <summary>
            解码输出事件
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.BaseStringFrameDecoder.DoDecoder(System.Object,Sunny.FrameDecoder.IStringEventArgs)">
            <summary>
            调用解码输出事件
            </summary>
            <param name="sender">解码器</param>
            <param name="e">数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.CanOpenPackageFrameDecoder">
            <summary>
            CanOpen包模式 - 数据帧解码器
            AA 00 00 08 00 00 06 01 2F 00 1A 00 00 00 00 00 
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.CanOpenPackageFrameDecoder.#ctor(System.Byte[],System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="headers">数据头</param>
            <param name="length">长度</param>
        </member>
        <member name="M:Sunny.FrameDecoder.CanOpenPackageFrameDecoder.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.CanOpenPackageFrameDecoder.Decoding">
            <summary>
            解码函数
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="F:Sunny.FrameDecoder.CanOpenPackageFrameDecoder.Headers">
            <summary>
            数据头部
            </summary>
        </member>
        <member name="F:Sunny.FrameDecoder.CanOpenPackageFrameDecoder.FixedLength">
            <summary>
            固定长度
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.CanOpenPackageFrameDecoder.PrepareDecode(System.Byte[]@)">
            <summary>
            准备数据解码
            </summary>
            <param name="data">输入数据</param>
            <returns>判断此数据是否可以解码</returns>
        </member>
        <member name="T:Sunny.FrameDecoder.DelimiterBasedFrameDecoder">
            <summary>
            基于分隔符 - 数据帧解码器
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DelimiterBasedFrameDecoder.#ctor(System.Byte[],System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="delimiters">分隔符，最好为多字节，并且数据中不会出现分隔符而造成误解码</param>
            <param name="maxFrameLength">最大数据长度，仅判断数据长度</param>
        </member>
        <member name="P:Sunny.FrameDecoder.DelimiterBasedFrameDecoder.Delimiters">
            <summary>
            分隔符
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DelimiterBasedFrameDecoder.CreateFrame(System.Byte[])">
            <summary>
            根据数据创建完整帧数据
            </summary>
            <param name="data">数据</param>
            <returns>完整帧数据</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.DelimiterBasedFrameDecoder.DecodeFrame(System.Byte[],Sunny.FrameDecoder.DelimiterByteFrameDataEventArgs@)">
            <summary>
            解析完整帧数据
            </summary>
            <param name="frame">完整帧数据</param>
            <param name="args">帧解码</param>
            <returns>解析是否成功</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.DelimiterBasedFrameDecoder.Decoding">
            <summary>
            解码函数
            </summary>
        </member>
        <member name="T:Sunny.FrameDecoder.FixedLengthFrameDecoder">
            <summary>
            固定长度 - 数据帧解码器
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.FixedLengthFrameDecoder.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="frameLength">帧固定长度</param>
        </member>
        <member name="P:Sunny.FrameDecoder.FixedLengthFrameDecoder.FrameLength">
            <summary>
            帧固定长度
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.FixedLengthFrameDecoder.Decoding">
            <summary>
            解码函数
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.FixedLengthFrameDecoder.CreateFrame(System.Byte[])">
            <summary>
            根据数据创建完整帧数据
            </summary>
            <param name="data">数据</param>
            <returns>完整帧数据</returns>
        </member>
        <member name="T:Sunny.FrameDecoder.HeaderDelimiterFrameDecoder">
            <summary>
            数据头部 - 数据帧解码器
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderDelimiterFrameDecoder.#ctor(System.Byte[],System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="headers">数据头部</param>
            <param name="maxFrameLength">最大数据长度，仅判断数据长度</param>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderDelimiterFrameDecoder.Headers">
            <summary>
            分隔符。
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderDelimiterFrameDecoder.Decoding">
            <summary>
            解码函数
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderDelimiterFrameDecoder.PrepareDecode(System.Byte[]@)">
            <summary>
            准备数据解码
            </summary>
            <param name="data">输入数据</param>
            <returns>判断此数据是否可以解码</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderDelimiterFrameDecoder.CreateFrame(System.Byte[])">
            <summary>
            根据数据创建完整帧数据
            </summary>
            <param name="data">数据</param>
            <returns>完整帧数据</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderDelimiterFrameDecoder.DecodeFrame(System.Byte[],Sunny.FrameDecoder.HeaderDelimiterByteFrameDataEventArgs@)">
            <summary>
            解析完整帧数据
            </summary>
            <param name="frame">完整帧数据</param>
            <param name="args">帧解码</param>
            <returns>解析是否成功</returns>
        </member>
        <member name="T:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDecoder">
            <summary>
            数据头部、标签、数据长度、数据、数据尾部 - 数据帧解码器
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDecoder.#ctor(System.Byte[],System.Byte[],System.Int32,Sunny.FrameDecoder.ValueLengthType,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="headers">数据头部</param>
            <param name="tails">数据尾部</param>
            <param name="tagLength">标签长度</param>
            <param name="valueLengthType">数据长度类型</param>
            <param name="valueLengthIsLittleEndian">数据长度字节顺序</param>
            <param name="isFullLength">数据长度是否包含数据头部、标签、数据长度、数据尾部的长度，false为仅数据长度</param>
            <param name="maxFrameLength">最大数据长度，仅判断数据长度</param>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDecoder.Headers">
            <summary>
            数据头部
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDecoder.Tails">
            <summary>
            数据尾部
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDecoder.TagLength">
            <summary>
            标签长度
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDecoder.ValueLengthType">
            <summary>
            数据长度类型
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDecoder.IsFullLength">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDecoder.Decoding">
            <summary>
            解码函数
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDecoder.PrepareDecode(System.Byte[]@)">
            <summary>
            准备数据解码
            </summary>
            <param name="data">输入数据</param>
            <returns>判断此数据是否可以解码</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDecoder.CreateFrame(System.Byte[],System.Byte[])">
            <summary>
            根据数据创建完整帧数据
            </summary>
            <param name="tags">标签</param>
            <param name="data">数据</param>
            <returns>完整帧数据</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDecoder.DecodeFrame(System.Byte[],Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDataEventArgs@)">
            <summary>
            解析完整帧数据
            </summary>
            <param name="frame">完整帧数据</param>
            <param name="args">帧解码</param>
            <returns>解析是否成功</returns>
        </member>
        <member name="T:Sunny.FrameDecoder.HeaderTailFrameDecoder">
            <summary>
            数据头部、数据尾部 - 数据帧解码器
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTailFrameDecoder.#ctor(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="headers">数据头部</param>
            <param name="tails">数据尾部</param>
            <param name="maxFrameLength">最大数据长度，仅判断数据长度</param>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderTailFrameDecoder.Headers">
            <summary>
            数据头部
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderTailFrameDecoder.Tails">
            <summary>
            数据尾部
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTailFrameDecoder.Decoding">
            <summary>
            解码函数
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTailFrameDecoder.PrepareDecode(System.Byte[]@)">
            <summary>
            准备数据解码
            </summary>
            <param name="data">输入数据</param>
            <returns>判断此数据是否可以解码</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTailFrameDecoder.CreateFrame(System.Byte[])">
            <summary>
            根据数据创建完整帧数据
            </summary>
            <param name="data">数据</param>
            <returns>完整帧数据</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTailFrameDecoder.DecodeFrame(System.Byte[],Sunny.FrameDecoder.HeaderTailByteFrameDataEventArgs@)">
            <summary>
            解析完整帧数据
            </summary>
            <param name="frame">完整帧数据</param>
            <param name="args">帧解码</param>
            <returns>解析是否成功</returns>
        </member>
        <member name="T:Sunny.FrameDecoder.LengthValueFrameDecoder">
            <summary>
            数据长度、数据 - 数据帧解码器
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.LengthValueFrameDecoder.#ctor(Sunny.FrameDecoder.ValueLengthType,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="valueLengthType">数据长度类型</param>
            <param name="valueLengthIsLittleEndian">数据长度字节顺序</param>
            <param name="isFullLength">数据长度是否包含数据长度的长度，false为仅数据长度</param>
            <param name="maxFrameLength">最大数据长度，仅判断数据长度</param>
        </member>
        <member name="P:Sunny.FrameDecoder.LengthValueFrameDecoder.ValueLengthType">
            <summary>
            数据长度类型
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.LengthValueFrameDecoder.IsFullLength">
            <summary>
            数据长度是否包含数据长度的长度，false为仅数据长度
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.LengthValueFrameDecoder.PrepareDecode(System.Byte[]@)">
            <summary>
            准备数据解码
            </summary>
            <param name="data">输入数据</param>
            <returns>判断此数据是否可以解码</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.LengthValueFrameDecoder.Decoding">
            <summary>
            解码函数
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.LengthValueFrameDecoder.CreateFrame(System.Byte[])">
            <summary>
            根据数据创建完整帧数据
            </summary>
            <param name="data">数据</param>
            <returns>完整帧数据</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.LengthValueFrameDecoder.DecodeFrame(System.Byte[],Sunny.FrameDecoder.LengthValueFrameDataEventArgs@)">
            <summary>
            解析完整帧数据
            </summary>
            <param name="frame">完整帧数据</param>
            <param name="args">帧解码</param>
            <returns>解析是否成功</returns>
        </member>
        <member name="T:Sunny.FrameDecoder.TagLengthValueFrameDecoder">
            <summary>
            标签、数据长度、数据 - 数据帧解码器
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.TagLengthValueFrameDecoder.#ctor(System.Int32,Sunny.FrameDecoder.ValueLengthType,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="tagLength">标签长度</param>
            <param name="valueLengthType">数据长度类型</param>
            <param name="valueLengthIsLittleEndian">数据长度字节顺序</param>
            <param name="isFullLength">数据长度是否包含标签、数据长度的长度，false为仅数据长度</param>
            <param name="maxFrameLength">最大数据长度，仅判断数据长度</param>
        </member>
        <member name="P:Sunny.FrameDecoder.TagLengthValueFrameDecoder.TagLength">
            <summary>
            标签长度
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.TagLengthValueFrameDecoder.ValueLengthType">
            <summary>
            数据长度类型
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.TagLengthValueFrameDecoder.IsFullLength">
            <summary>
            数据长度是否包含标签、数据长度的长度，false为仅数据长度
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.TagLengthValueFrameDecoder.Decoding">
            <summary>
            解码函数
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.TagLengthValueFrameDecoder.CreateFrame(System.Byte[],System.Byte[])">
            <summary>
            根据数据创建完整帧数据
            </summary>
            <param name="tags">标签</param>
            <param name="data">数据</param>
            <returns>完整帧数据</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.TagLengthValueFrameDecoder.DecodeFrame(System.Byte[],Sunny.FrameDecoder.TagLengthValueFrameDataEventArgs@)">
            <summary>
            解析完整帧数据
            </summary>
            <param name="frame">完整帧数据</param>
            <param name="args">帧解码</param>
            <returns>解析是否成功</returns>
        </member>
        <member name="T:Sunny.FrameDecoder.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="F:Sunny.FrameDecoder.DataType.String">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:Sunny.FrameDecoder.DataType.Byte">
            <summary>
            数组
            </summary>
        </member>
        <member name="T:Sunny.FrameDecoder.DecoderErrorEventArgs">
            <summary>
            解码错误事件类
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DecoderErrorEventArgs.Message">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DecoderErrorEventArgs.ByteData">
            <summary>
            当前数据
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DecoderErrorEventArgs.StringData">
            <summary>
            当前数据
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderErrorEventArgs.#ctor(System.String,System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="message">错误消息</param>
            <param name="data">当前数据</param>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderErrorEventArgs.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">错误消息</param>
            <param name="data">当前数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.OnDecoderError">
            <summary>
            解码错误事件类
            </summary>
            <param name="sender">对象</param>
            <param name="e">解码错误事件类</param>
        </member>
        <member name="T:Sunny.FrameDecoder.IByteEventArgs">
            <summary>
            字节数组数据接口
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.IByteEventArgs.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.IByteEventArgs.Decoder">
            <summary>
            解码器
            </summary>
        </member>
        <member name="T:Sunny.FrameDecoder.ByteEventArgs">
            <summary>
            字节数组数据事件类
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.ByteEventArgs.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteEventArgs.#ctor(System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.OnByteEventHandler">
            <summary>
            字节数组数据事件类
            </summary>
            <param name="sender">对象</param>
            <param name="e">字节数组数据事件类</param>
        </member>
        <member name="T:Sunny.FrameDecoder.ByteDataEventArgs">
            <summary>
            字节数组解码数据事件类
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.ByteDataEventArgs.Decoder">
            <summary>
            解码器
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteDataEventArgs.#ctor(Sunny.FrameDecoder.BaseByteFrameDecoder,System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="decoder">解码器</param>
            <param name="value">数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.ByteFrameDataEventArgs">
            <summary>
            字节数组解码帧数据事件类
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.ByteFrameDataEventArgs.Body">
            <summary>
            整帧数据，包含分隔符、标签、数据头、数据尾部等
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteFrameDataEventArgs.#ctor(Sunny.FrameDecoder.BaseByteFrameDecoder,System.Byte[],System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="decoder">解码器</param>
            <param name="value">数据</param>
            <param name="body">整帧数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.HeaderTailByteFrameDataEventArgs">
            <summary>
            数据头部、数据尾部字节数组解码帧数据事件类
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderTailByteFrameDataEventArgs.Headers">
            <summary>
            数据头部
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderTailByteFrameDataEventArgs.Tails">
            <summary>
            数据尾部
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTailByteFrameDataEventArgs.#ctor(Sunny.FrameDecoder.BaseByteFrameDecoder,System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="decoder">解码器</param>
            <param name="headers">数据头部</param>
            <param name="tails">数据尾部</param>
            <param name="value">数据</param>
            <param name="body">整帧数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.FixedLengthByteFrameDataEventArgs">
            <summary>
            帧固定长度字节数组解码帧数据事件类
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.FixedLengthByteFrameDataEventArgs.FrameLength">
            <summary>
            帧固定长度
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.FixedLengthByteFrameDataEventArgs.#ctor(Sunny.FrameDecoder.BaseByteFrameDecoder,System.Int32,System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="decoder">解码器</param>
            <param name="frameLength">帧固定长度</param>
            <param name="value">数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.DelimiterByteFrameDataEventArgs">
            <summary>
            分隔符字节数组解码帧数据事件类
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.DelimiterByteFrameDataEventArgs.Delimiters">
            <summary>
            分隔符
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DelimiterByteFrameDataEventArgs.#ctor(Sunny.FrameDecoder.BaseByteFrameDecoder,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="decoder">解码器</param>
            <param name="value">数据</param>
            <param name="delimiters">分隔符</param>
            <param name="body">整帧数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.HeaderDelimiterByteFrameDataEventArgs">
            <summary>
            数据头部分隔符字节数组解码帧数据事件类
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderDelimiterByteFrameDataEventArgs.HeaderDelimiters">
            <summary>
            数据头部分隔符
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderDelimiterByteFrameDataEventArgs.#ctor(Sunny.FrameDecoder.BaseByteFrameDecoder,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="decoder">解码器</param>
            <param name="headers">数据头部分隔符</param>
            <param name="value">数据</param>
            <param name="body">整帧数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.LengthValueFrameDataEventArgs">
            <summary>
            字节数组解码数据事件类（增加长度）
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.LengthValueFrameDataEventArgs.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.LengthValueFrameDataEventArgs.#ctor(Sunny.FrameDecoder.BaseByteFrameDecoder,System.Int32,System.Byte[],System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="decoder">解码器</param>
            <param name="len">长度</param>
            <param name="value">数据</param>
            <param name="body">整帧数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.CanOpenPackageFrameDataEventArgs">
            <summary>
            CanOpen包模式
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.CanOpenPackageFrameDataEventArgs.COBID">
            <summary>
            COBID
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.CanOpenPackageFrameDataEventArgs.#ctor(Sunny.FrameDecoder.BaseByteFrameDecoder,System.Byte[],System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="decoder"></param>
            <param name="value"></param>
            <param name="body"></param>
        </member>
        <member name="T:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDataEventArgs">
            <summary>
            字节数组解码数据事件类（增加数据头部、标签、数据长度、数据、数据尾部）
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDataEventArgs.Headers">
            <summary>
            数据头部
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDataEventArgs.Tails">
            <summary>
            数据尾部
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.HeaderTagLengthValueTailFrameDataEventArgs.#ctor(Sunny.FrameDecoder.BaseByteFrameDecoder,System.Byte[],System.Byte[],System.Int32,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="decoder">解码器</param>
            <param name="headers">数据头部</param>
            <param name="tag">标签</param>
            <param name="len">长度</param>
            <param name="value">数据</param>
            <param name="tails">数据尾部</param>
            <param name="body">整帧数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.TagLengthValueFrameDataEventArgs">
            <summary>
            字节数组解码数据事件类（增加标签、长度）
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.TagLengthValueFrameDataEventArgs.Tag">
            <summary>
            标签
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.TagLengthValueFrameDataEventArgs.#ctor(Sunny.FrameDecoder.BaseByteFrameDecoder,System.Byte[],System.Int32,System.Byte[],System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="decoder">解码器</param>
            <param name="tag">标签</param>
            <param name="len">长度</param>
            <param name="value">数据</param>
            <param name="body">整帧数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.IStringEventArgs">
            <summary>
            字符串数据接口
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.IStringEventArgs.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.IStringEventArgs.Decoder">
            <summary>
            解码器
            </summary>
        </member>
        <member name="T:Sunny.FrameDecoder.StringEventArgs">
            <summary>
            字符串数据事件类
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.StringEventArgs.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.StringEventArgs.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="value">数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.OnStringEventHandler">
            <summary>
            字符串数据事件类
            </summary>
            <param name="sender">对象</param>
            <param name="e">字符串解码数据事件类</param>
        </member>
        <member name="T:Sunny.FrameDecoder.StringDataEventArgs">
            <summary>
            字符串解码数据事件类
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.StringDataEventArgs.Decoder">
            <summary>
            解码器
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.StringDataEventArgs.#ctor(Sunny.FrameDecoder.BaseStringFrameDecoder,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="decoder">解码器</param>
            <param name="value">数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.StringFrameDataEventArgs">
            <summary>
            字符串解码帧数据事件类
            </summary>
        </member>
        <member name="P:Sunny.FrameDecoder.StringFrameDataEventArgs.Body">
            <summary>
            整帧数据，包含分隔符、标签、数据头、数据尾部等
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.StringFrameDataEventArgs.#ctor(Sunny.FrameDecoder.BaseStringFrameDecoder,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="decoder">解码器</param>
            <param name="value">数据</param>
            <param name="body">整帧数据</param>
        </member>
        <member name="T:Sunny.FrameDecoder.LineBasedFrameDecoder">
            <summary>
            基于换行符 - 数据帧解码器
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.LineBasedFrameDecoder.Decoding">
            <summary>
            解码函数
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.LineBasedFrameDecoder.PrepareDecode(System.String@)">
            <summary>
            准备数据解码
            </summary>
            <param name="data">输入数据</param>
            <returns>判断此数据是否可以解码</returns>
        </member>
        <member name="T:Sunny.FrameDecoder.NMEA0183FrameDecoder">
            <summary>
            NMEA0183 - 数据帧解码器
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.NMEA0183FrameDecoder.Decoding">
            <summary>
            解码函数
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.NMEA0183FrameDecoder.PrepareDecode(System.String@)">
            <summary>
            准备数据解码
            </summary>
            <param name="data">输入数据</param>
            <returns>判断此数据是否可以解码</returns>
        </member>
        <member name="T:Sunny.FrameDecoder.ValueLengthType">
            <summary>
            数据长度类型
            </summary>
        </member>
        <member name="F:Sunny.FrameDecoder.ValueLengthType.Byte">
            <summary>
            字节，单字节
            </summary>
        </member>
        <member name="F:Sunny.FrameDecoder.ValueLengthType.UShort">
            <summary>
            短整数，双字节
            </summary>
        </member>
        <member name="F:Sunny.FrameDecoder.ValueLengthType.UInt">
            <summary>
            整数，四字节
            </summary>
        </member>
        <member name="T:Sunny.FrameDecoder.ByteHelper">
            <summary>
            包括字节顺序的数据与字节数组转换帮助类
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.BitsString(System.Byte)">
            <summary>
            获取二进制字符串
            </summary>
            <param name="value">值</param>
            <returns>字符串</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.BitsString(System.UInt16)">
            <summary>
            获取二进制字符串
            </summary>
            <param name="value">值</param>
            <returns>字符串</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.BitsString(System.UInt32)">
            <summary>
            获取二进制字符串
            </summary>
            <param name="value">值</param>
            <returns>字符串</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.BitsByte(System.String)">
            <summary>
            获取单字节值
            </summary>
            <param name="value">二进制字符串</param>
            <returns>单字节值</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.BitsUShort(System.String)">
            <summary>
            获取无符号双字节值
            </summary>
            <param name="value">二进制字符串</param>
            <returns>无符号双字节值</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.BitsUInt(System.String)">
            <summary>
            获取无符号四字节值
            </summary>
            <param name="value">二进制字符串</param>
            <returns>无符号四字节值</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.HexString(System.Collections.Generic.IEnumerable{System.Byte},System.String)">
            <summary>
            字节数组转十六进制字符串
            </summary>
            <param name="bytes">字节数组</param>
            <param name="span">分隔符</param>
            <returns>结果</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.HexBytes(System.String,System.String)">
            <summary>
            十六进制字符串转字节数组
            </summary>
            <param name="str">十六进制字符串</param>
            <param name="span">分隔符</param>
            <returns>结果</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.HexString(System.Byte)">
            <summary>
            字节转十六进制字符串
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.IndexOf``1(System.ReadOnlySpan{``0},System.Int32,System.ReadOnlySpan{``0})">
            <summary>
            返回数据索引
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="source">数据源</param>
            <param name="start">起始位置</param>
            <param name="value">数据</param>
            <returns>索引</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.GetBytesFromBool(System.Boolean)">
            <summary>
            Returns the specified Boolean value as a byte array.
            </summary>
            <param name="value">A Boolean value.</param>
            <returns>A byte array with length 1.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.GetBytesFromShort(System.Int16,System.Boolean)">
            <summary>
            Returns the specified 16-bit signed integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>An array of bytes with length 2.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.GetBytesFromInt(System.Int32,System.Boolean)">
            <summary>
            Returns the specified 32-bit signed integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>An array of bytes with length 4.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.GetBytesFromLong(System.Int64,System.Boolean)">
            <summary>
            Returns the specified 64-bit signed integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>An array of bytes with length 8.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.GetBytesFromUShort(System.UInt16,System.Boolean)">
            <summary>
            Returns the specified 16-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>An array of bytes with length 2.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.GetBytesFromUInt(System.UInt32,System.Boolean)">
            <summary>
            Returns the specified 32-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>An array of bytes with length 4.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.GetBytesFromULong(System.UInt64,System.Boolean)">
            <summary>
            Returns the specified 64-bit signed integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>An array of bytes with length 8.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.GetBytesFromFloat(System.Single,System.Boolean)">
            <summary>
            Returns the specified single-precision floating point value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>An array of bytes with length 4.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.GetBytesFromDouble(System.Double,System.Boolean)">
            <summary>
            Returns the specified double-precision floating point value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>An array of bytes with length 8.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToShort(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Returns a 16-bit signed integer converted from two bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 16-bit signed integer formed by two bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToInt(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Returns a 32-bit signed integer converted from four bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 32-bit signed integer formed by four bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToLong(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Returns a 64-bit signed integer converted from eight bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 64-bit signed integer formed by eight bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToUShort(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Returns a 16-bit unsigned integer converted from two bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 16-bit unsigned integer formed by two bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToUInt(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Returns a 32-bit unsigned integer converted from four bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 32-bit unsigned integer formed by four bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToULong(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Returns a 64-bit unsigned integer converted from four bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 64-bit unsigned integer formed by eight bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToFloat(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Returns a single-precision floating point number converted from four bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A single-precision floating point number formed by four bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToDouble(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Returns a double-precision floating point number converted from four bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A double-precision floating point number formed by eight bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToBoolean(System.Byte[],System.Int32)">
            <summary>
            Returns a Boolean value converted from two bytes at a specified position in a byte array.
            </summary>
            <param name="value">A byte array.</param>
            <param name="startIndex">The index of the byte within <paramref name="value"/>.</param>
            <returns><see langword="true"/> if the byte at <paramref name="startIndex"/> is nonzero; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.DoubleToInt64Bits(System.Double)">
            <summary>
            Converts the specified double-precision floating point number to a 64-bit signed integer.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>A 64-bit signed integer whose bits are identical to <paramref name="value"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.Int64BitsToDouble(System.Int64)">
            <summary>
            Converts the specified 64-bit signed integer to a double-precision floating point number.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>A double-precision floating point number whose bits are identical to <paramref name="value"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.SingleToInt32Bits(System.Single)">
            <summary>
            Converts the specified single-precision floating point number to a 32-bit signed integer.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>A 32-bit signed integer whose bits are identical to <paramref name="value"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.Int32BitsToSingle(System.Int32)">
            <summary>
            Converts the specified 32-bit signed integer to a single-precision floating point number.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>A single-precision floating point number whose bits are identical to <paramref name="value"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.DoubleToUInt64Bits(System.Double)">
            <summary>
            Converts the specified double-precision floating point number to a 64-bit unsigned integer.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>A 64-bit unsigned integer whose bits are identical to <paramref name="value"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.UInt64BitsToDouble(System.UInt64)">
            <summary>
            Converts the specified 64-bit unsigned integer to a double-precision floating point number.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>A double-precision floating point number whose bits are identical to <paramref name="value"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.SingleToUInt32Bits(System.Single)">
            <summary>
            Converts the specified single-precision floating point number to a 32-bit unsigned integer.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>A 32-bit unsigned integer whose bits are identical to <paramref name="value"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.UInt32BitsToSingle(System.UInt32)">
            <summary>
            Converts the specified 32-bit unsigned integer to a single-precision floating point number.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>A single-precision floating point number whose bits are identical to <paramref name="value"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToShort(System.ReadOnlySpan{System.Byte},System.Int32,System.Boolean)">
            <summary>
            Returns a 16-bit signed integer converted from two bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 16-bit signed integer formed by two bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToInt(System.ReadOnlySpan{System.Byte},System.Int32,System.Boolean)">
            <summary>
            Returns a 32-bit signed integer converted from four bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 32-bit signed integer formed by four bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToLong(System.ReadOnlySpan{System.Byte},System.Int32,System.Boolean)">
            <summary>
            Returns a 64-bit signed integer converted from eight bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 64-bit signed integer formed by eight bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToUShort(System.ReadOnlySpan{System.Byte},System.Int32,System.Boolean)">
            <summary>
            Returns a 16-bit unsigned integer converted from two bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 16-bit unsigned integer formed by two bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToUInt(System.ReadOnlySpan{System.Byte},System.Int32,System.Boolean)">
            <summary>
            Returns a 32-bit unsigned integer converted from four bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 32-bit unsigned integer formed by four bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToULong(System.ReadOnlySpan{System.Byte},System.Int32,System.Boolean)">
            <summary>
            Returns a 64-bit unsigned integer converted from four bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A 64-bit unsigned integer formed by eight bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToFloat(System.ReadOnlySpan{System.Byte},System.Int32,System.Boolean)">
            <summary>
            Returns a single-precision floating point number converted from four bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A single-precision floating point number formed by four bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToDouble(System.ReadOnlySpan{System.Byte},System.Int32,System.Boolean)">
            <summary>
            Returns a double-precision floating point number converted from four bytes at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within <paramref name="value"/>.</param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns>A double-precision floating point number formed by eight bytes beginning at <paramref name="startIndex"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.ToBoolean(System.ReadOnlySpan{System.Byte},System.Int32)">
            <summary>
            Returns a Boolean value converted from two bytes at a specified position in a byte array.
            </summary>
            <param name="value">A byte array.</param>
            <param name="startIndex">The index of the byte within <paramref name="value"/>.</param>
            <returns><see langword="true"/> if the byte at <paramref name="startIndex"/> is nonzero; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteBool(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteByte(System.Byte[],System.Int32,System.Byte)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteBytes(System.Byte[],System.Int32,System.Byte[])">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteBytes(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <param name="offset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteSpan(System.Byte[],System.Int32,System.ReadOnlySpan{System.Byte})">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteShort(System.Byte[],System.Int32,System.Int16,System.Boolean)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteInt(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteLong(System.Byte[],System.Int32,System.Int64,System.Boolean)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <param name="isLittleEndian"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteUShort(System.Byte[],System.Int32,System.UInt16,System.Boolean)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <param name="isLittleEndian"></param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteUInt(System.Byte[],System.Int32,System.UInt32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteULong(System.Byte[],System.Int32,System.UInt64,System.Boolean)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteFloat(System.Byte[],System.Int32,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns></returns>
        </member>
        <member name="M:Sunny.FrameDecoder.ByteHelper.TryWriteDouble(System.Byte[],System.Int32,System.Double,System.Boolean)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="value"></param>
            <param name="isLittleEndian">字节顺序，true为小端字节(低字节序)，false为大端字节序(高字节序)</param>
            <returns></returns>
        </member>
        <member name="T:Sunny.FrameDecoder.DecoderHelper">
            <summary>
            数据帧解码器帮助类
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderHelper.Length(Sunny.FrameDecoder.ValueLengthType)">
            <summary>
            数据长度类型的长度
            </summary>
            <param name="valueLengthType">数据长度类型</param>
            <returns>长度</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderHelper.Get2PowNHigh(System.Int32)">
            <summary>
            得到最接近数字且大于数字的二的N次方数
            </summary>
            <param name="value">数字</param>
            <returns>二的N次方数</returns>
        </member>
        <member name="M:Sunny.FrameDecoder.DecoderHelper.Get2PowNLow(System.Int32)">
            <summary>
            得到最接近数字且小于数字的二的N次方数
            </summary>
            <param name="value">数字</param>
            <returns>二的N次方数</returns>
        </member>
        <member name="T:Sunny.FrameDecoder.FrameDecoderException">
            <summary>
            编码异常类
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.FrameDecoderException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:Sunny.FrameDecoder.FrameDecoderException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">消息</param>
            <param name="innerException">异常</param>
        </member>
        <member name="T:Sunny.FrameDecoder.ThrowHelper">
            <summary>
            抛异常帮助类
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.ThrowHelper.ThrowMessage(System.String)">
            <summary>
            抛异常
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="T:Sunny.FrameDecoder.ValueStringBuilder">
            <summary>
            栈上分配的字符串拼接类
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.ValueStringBuilder.GetPinnableReference">
            <summary>
            Get a pinnable reference to the builder.
            Does not ensure there is a null char after <see cref="P:Sunny.FrameDecoder.ValueStringBuilder.Length"/>
            This overload is pattern matched in the C# 7.3+ compiler so you can omit
            the explicit method call, and write eg "fixed (char* c = builder)"
            </summary>
        </member>
        <member name="M:Sunny.FrameDecoder.ValueStringBuilder.GetPinnableReference(System.Boolean)">
            <summary>
            Get a pinnable reference to the builder.
            </summary>
            <param name="terminate">Ensures that the builder has a null char after <see cref="P:Sunny.FrameDecoder.ValueStringBuilder.Length"/></param>
        </member>
        <member name="P:Sunny.FrameDecoder.ValueStringBuilder.RawChars">
            <summary>Returns the underlying storage of the builder.</summary>
        </member>
        <member name="M:Sunny.FrameDecoder.ValueStringBuilder.AsSpan(System.Boolean)">
            <summary>
            Returns a span around the contents of the builder.
            </summary>
            <param name="terminate">Ensures that the builder has a null char after <see cref="P:Sunny.FrameDecoder.ValueStringBuilder.Length"/></param>
        </member>
        <member name="M:Sunny.FrameDecoder.ValueStringBuilder.Grow(System.Int32)">
            <summary>
            Resize the internal buffer either by doubling current buffer size or
            by adding <paramref name="additionalCapacityBeyondPos"/> to
            <see cref="F:Sunny.FrameDecoder.ValueStringBuilder._pos"/> whichever is greater.
            </summary>
            <param name="additionalCapacityBeyondPos">
            Number of chars requested beyond current position.
            </param>
        </member>
    </members>
</doc>
